#####################################################
#
#   WEBGUY PORTAL FRAMEWORK CI/CD PIPELINE
#
#

stages:
    - development
    - staging
    - production

### DEVELOPMENT / STAGING ###
.staging-job-template: &staging-job-template
    tags:
        - webguy-development-server
    only:
        refs:
            - branches
    except:
        changes:
            - "_exclusings.txt"
            - .*
            - "*.md"
    # when: manual # Uncomment if you want to enable manual intervention
    image: node:latest
    script:
        - npm install uglifyjs-folder -g # Install uglifyjs-folder if not already installed. No need for sudo, npm is installed under gitlab-runner
        - uglifyjs-folder ./framework/js -eo ./framework/js/ -p "**/*.js" # Minify all JS in the folder with separate files
        - uglifyjs-folder ./framework/vendor/datepicker-lightpick/js -eo ./framework/vendor/datepicker-lightpick/js/ -p "**/*.js" # Minify custom lightpick JS
        - find ./framework/js ./framework/vendor/datepicker-lightpick/js -type f -name "*.js" -not -name "*.min.js" -delete # Remove the unminified JS
        - if [ -z "$WEBROOT" ]; then echo "Need to set webroot as GitLab CI/CD variable" && exit 1; fi # Verify env var is set
        - sudo rsync -rv ./framework/ $WEBROOT/framework --delete --exclude-from=./_exclusions.txt --exclude='composer.*' # Sync and overwrite framework directory
        - sudo rsync -rv ./ $WEBROOT --exclude 'framework' --exclude-from=./_exclusions.txt # Sync root directory without overwrite
        - sudo chown admin:admin $WEBROOT -R

### PRODUCTION ###
.production-job-template: &production-job-template
    environment:
        name: production
    stage: production
    tags:
        - penny-webserver
    except:
        changes:
            - "_exclusings.txt"
            - .*
            - "*.md"
    only:
        refs:
            - branches
    when: manual
    image: node:latest
    script:
        - sudo npm install uglifyjs-folder -g # Install uglifyjs-folder if not already installed. No need for sudo, npm is installed under gitlab-runner
        - uglifyjs-folder ./framework/js -eo ./framework/js/ -p "**/*.js" # Minify all JS in the folder with separate files
        - uglifyjs-folder ./framework/vendor/datepicker-lightpick/js -eo ./framework/vendor/datepicker-lightpick/js/ -p "**/*.js" # Minify custom lightpick JS
        - find ./framework/js ./framework/vendor/datepicker-lightpick/js -type f -name "*.js" -not -name "*.min.js" -delete # Remove the unminified JS
        - if [ -z "$WEBROOT" ]; then echo "Need to set webroot" && exit 1; fi # Verify webroot env var is set
        - sudo rsync -rv ./framework/ $WEBROOT/framework --delete --exclude-from=./_exclusions.txt --exclude='composer.*' # Sync and overwrite framework directory
        - sudo rsync -rv ./ $WEBROOT --exclude 'framework' --exclude-from=./_exclusions.txt # Sync root directory without overwrite
        - sudo chown 1004:users $WEBROOT -R # Change ownerships

# PORTAL-FRAMEWORK DEVELOPMENT
deploy-to-development-server:
    stage: development
    <<: *staging-job-template
    variables:
        WEBROOT: $portal_development_root

# FAIRYLAND DEVELOPMENT
update-fairyland-dev-portal-framework:
    stage: staging
    <<: *staging-job-template
    variables:
        WEBROOT: $fairyland_admin_dev_webroot

# WEBGUY ONENOTE API DEVELOPMENT
update-webguy-onenote-api-dev-framework:
    stage: staging
    <<: *staging-job-template
    variables:
        WEBROOT: $webguy_onenote_api_dev_webroot

# FAIRYLAND ADMIN PRODUCTION
update-fairyland-production-portal-framework:
    <<: *production-job-template
    variables:
        WEBROOT: $fairyland_admin_production_webroot
